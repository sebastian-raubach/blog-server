/*
 * This file is generated by jOOQ.
 */
package blog.raubach.database.codegen.tables.records;


import blog.raubach.database.codegen.tables.Stories;

import java.sql.Timestamp;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


// @formatter:off
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StoriesRecord extends UpdatableRecordImpl<StoriesRecord> implements Record6<Integer, String, String, String, Timestamp, Timestamp> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>blog_db.stories.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>blog_db.stories.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>blog_db.stories.title</code>.
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>blog_db.stories.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>blog_db.stories.content</code>.
     */
    public void setContent(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>blog_db.stories.content</code>.
     */
    public String getContent() {
        return (String) get(2);
    }

    /**
     * Setter for <code>blog_db.stories.content_markdown</code>.
     */
    public void setContentMarkdown(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>blog_db.stories.content_markdown</code>.
     */
    public String getContentMarkdown() {
        return (String) get(3);
    }

    /**
     * Setter for <code>blog_db.stories.created_on</code>.
     */
    public void setCreatedOn(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>blog_db.stories.created_on</code>.
     */
    public Timestamp getCreatedOn() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>blog_db.stories.updated_on</code>.
     */
    public void setUpdatedOn(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>blog_db.stories.updated_on</code>.
     */
    public Timestamp getUpdatedOn() {
        return (Timestamp) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, String, String, Timestamp, Timestamp> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, String, String, String, Timestamp, Timestamp> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Stories.STORIES.ID;
    }

    @Override
    public Field<String> field2() {
        return Stories.STORIES.TITLE;
    }

    @Override
    public Field<String> field3() {
        return Stories.STORIES.CONTENT;
    }

    @Override
    public Field<String> field4() {
        return Stories.STORIES.CONTENT_MARKDOWN;
    }

    @Override
    public Field<Timestamp> field5() {
        return Stories.STORIES.CREATED_ON;
    }

    @Override
    public Field<Timestamp> field6() {
        return Stories.STORIES.UPDATED_ON;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public String component3() {
        return getContent();
    }

    @Override
    public String component4() {
        return getContentMarkdown();
    }

    @Override
    public Timestamp component5() {
        return getCreatedOn();
    }

    @Override
    public Timestamp component6() {
        return getUpdatedOn();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public String value3() {
        return getContent();
    }

    @Override
    public String value4() {
        return getContentMarkdown();
    }

    @Override
    public Timestamp value5() {
        return getCreatedOn();
    }

    @Override
    public Timestamp value6() {
        return getUpdatedOn();
    }

    @Override
    public StoriesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public StoriesRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public StoriesRecord value3(String value) {
        setContent(value);
        return this;
    }

    @Override
    public StoriesRecord value4(String value) {
        setContentMarkdown(value);
        return this;
    }

    @Override
    public StoriesRecord value5(Timestamp value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public StoriesRecord value6(Timestamp value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    public StoriesRecord values(Integer value1, String value2, String value3, String value4, Timestamp value5, Timestamp value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StoriesRecord
     */
    public StoriesRecord() {
        super(Stories.STORIES);
    }

    /**
     * Create a detached, initialised StoriesRecord
     */
    public StoriesRecord(Integer id, String title, String content, String contentMarkdown, Timestamp createdOn, Timestamp updatedOn) {
        super(Stories.STORIES);

        setId(id);
        setTitle(title);
        setContent(content);
        setContentMarkdown(contentMarkdown);
        setCreatedOn(createdOn);
        setUpdatedOn(updatedOn);
    }

    /**
     * Create a detached, initialised StoriesRecord
     */
    public StoriesRecord(blog.raubach.database.codegen.tables.pojos.Stories value) {
        super(Stories.STORIES);

        if (value != null) {
            setId(value.getId());
            setTitle(value.getTitle());
            setContent(value.getContent());
            setContentMarkdown(value.getContentMarkdown());
            setCreatedOn(value.getCreatedOn());
            setUpdatedOn(value.getUpdatedOn());
        }
    }
    // @formatter:on
}
