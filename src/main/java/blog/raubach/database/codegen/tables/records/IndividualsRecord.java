/*
 * This file is generated by jOOQ.
 */
package blog.raubach.database.codegen.tables.records;


import blog.raubach.database.codegen.tables.Individuals;

import java.sql.Timestamp;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


// @formatter:off
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IndividualsRecord extends UpdatableRecordImpl<IndividualsRecord> implements Record6<Integer, String, Integer, byte[], Timestamp, Timestamp> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>blog_db.individuals.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>blog_db.individuals.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>blog_db.individuals.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>blog_db.individuals.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>blog_db.individuals.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>blog_db.individuals.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>blog_db.individuals.photo</code>.
     */
    public void setPhoto(byte[] value) {
        set(3, value);
    }

    /**
     * Getter for <code>blog_db.individuals.photo</code>.
     */
    public byte[] getPhoto() {
        return (byte[]) get(3);
    }

    /**
     * Setter for <code>blog_db.individuals.created_on</code>.
     */
    public void setCreatedOn(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>blog_db.individuals.created_on</code>.
     */
    public Timestamp getCreatedOn() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>blog_db.individuals.updated_on</code>.
     */
    public void setUpdatedOn(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>blog_db.individuals.updated_on</code>.
     */
    public Timestamp getUpdatedOn() {
        return (Timestamp) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, Integer, byte[], Timestamp, Timestamp> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, String, Integer, byte[], Timestamp, Timestamp> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Individuals.INDIVIDUALS.ID;
    }

    @Override
    public Field<String> field2() {
        return Individuals.INDIVIDUALS.NAME;
    }

    @Override
    public Field<Integer> field3() {
        return Individuals.INDIVIDUALS.USER_ID;
    }

    @Override
    public Field<byte[]> field4() {
        return Individuals.INDIVIDUALS.PHOTO;
    }

    @Override
    public Field<Timestamp> field5() {
        return Individuals.INDIVIDUALS.CREATED_ON;
    }

    @Override
    public Field<Timestamp> field6() {
        return Individuals.INDIVIDUALS.UPDATED_ON;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Integer component3() {
        return getUserId();
    }

    @Override
    public byte[] component4() {
        return getPhoto();
    }

    @Override
    public Timestamp component5() {
        return getCreatedOn();
    }

    @Override
    public Timestamp component6() {
        return getUpdatedOn();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Integer value3() {
        return getUserId();
    }

    @Override
    public byte[] value4() {
        return getPhoto();
    }

    @Override
    public Timestamp value5() {
        return getCreatedOn();
    }

    @Override
    public Timestamp value6() {
        return getUpdatedOn();
    }

    @Override
    public IndividualsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public IndividualsRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public IndividualsRecord value3(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public IndividualsRecord value4(byte[] value) {
        setPhoto(value);
        return this;
    }

    @Override
    public IndividualsRecord value5(Timestamp value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public IndividualsRecord value6(Timestamp value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    public IndividualsRecord values(Integer value1, String value2, Integer value3, byte[] value4, Timestamp value5, Timestamp value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached IndividualsRecord
     */
    public IndividualsRecord() {
        super(Individuals.INDIVIDUALS);
    }

    /**
     * Create a detached, initialised IndividualsRecord
     */
    public IndividualsRecord(Integer id, String name, Integer userId, byte[] photo, Timestamp createdOn, Timestamp updatedOn) {
        super(Individuals.INDIVIDUALS);

        setId(id);
        setName(name);
        setUserId(userId);
        setPhoto(photo);
        setCreatedOn(createdOn);
        setUpdatedOn(updatedOn);
    }

    /**
     * Create a detached, initialised IndividualsRecord
     */
    public IndividualsRecord(blog.raubach.database.codegen.tables.pojos.Individuals value) {
        super(Individuals.INDIVIDUALS);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setUserId(value.getUserId());
            setPhoto(value.getPhoto());
            setCreatedOn(value.getCreatedOn());
            setUpdatedOn(value.getUpdatedOn());
        }
    }
    // @formatter:on
}
