/*
 * This file is generated by jOOQ.
 */
package blog.raubach.database.codegen.tables;


import blog.raubach.database.codegen.BlogDb;
import blog.raubach.database.codegen.tables.records.PostusersRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.TableImpl;


// @formatter:off
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Postusers extends TableImpl<PostusersRecord> {

    private static final long serialVersionUID = 571288817;

    /**
     * The reference instance of <code>blog_db.postusers</code>
     */
    public static final Postusers POSTUSERS = new Postusers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PostusersRecord> getRecordType() {
        return PostusersRecord.class;
    }

    /**
     * The column <code>blog_db.postusers.post_id</code>.
     */
    public final TableField<PostusersRecord, Integer> POST_ID = createField("post_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>blog_db.postusers.user_id</code>.
     */
    public final TableField<PostusersRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>blog_db.postusers</code> table reference
     */
    public Postusers() {
        this(DSL.name("postusers"), null);
    }

    /**
     * Create an aliased <code>blog_db.postusers</code> table reference
     */
    public Postusers(String alias) {
        this(DSL.name(alias), POSTUSERS);
    }

    /**
     * Create an aliased <code>blog_db.postusers</code> table reference
     */
    public Postusers(Name alias) {
        this(alias, POSTUSERS);
    }

    private Postusers(Name alias, Table<PostusersRecord> aliased) {
        this(alias, aliased, null);
    }

    private Postusers(Name alias, Table<PostusersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BlogDb.BLOG_DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PostusersRecord> getPrimaryKey() {
        return Internal.createUniqueKey(blog.raubach.database.codegen.tables.Postusers.POSTUSERS, "KEY_postusers_PRIMARY", blog.raubach.database.codegen.tables.Postusers.POSTUSERS.POST_ID, blog.raubach.database.codegen.tables.Postusers.POSTUSERS.USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PostusersRecord>> getKeys() {
        return Arrays.<UniqueKey<PostusersRecord>>asList(
              Internal.createUniqueKey(blog.raubach.database.codegen.tables.Postusers.POSTUSERS, "KEY_postusers_PRIMARY", blog.raubach.database.codegen.tables.Postusers.POSTUSERS.POST_ID, blog.raubach.database.codegen.tables.Postusers.POSTUSERS.USER_ID)
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Postusers as(String alias) {
        return new Postusers(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Postusers as(Name alias) {
        return new Postusers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Postusers rename(String name) {
        return new Postusers(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Postusers rename(Name name) {
        return new Postusers(name, null);
    }
// @formatter:on
}
