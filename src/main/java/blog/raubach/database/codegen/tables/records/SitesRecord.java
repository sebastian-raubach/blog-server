/*
 * This file is generated by jOOQ.
 */
package blog.raubach.database.codegen.tables.records;


import blog.raubach.database.codegen.enums.SitesGroundtype;
import blog.raubach.database.codegen.enums.SitesSitetype;
import blog.raubach.database.codegen.tables.Sites;
import blog.raubach.pojo.SiteFacilities;
import blog.raubach.pojo.SiteRating;

import java.sql.Timestamp;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


// @formatter:off
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SitesRecord extends UpdatableRecordImpl<SitesRecord> implements Record12<Integer, String, String, SitesSitetype, SitesGroundtype, Double, Double, Double, SiteRating, SiteFacilities, Timestamp, Timestamp> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>blog_db.sites.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>blog_db.sites.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>blog_db.sites.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>blog_db.sites.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>blog_db.sites.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>blog_db.sites.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>blog_db.sites.sitetype</code>.
     */
    public void setSitetype(SitesSitetype value) {
        set(3, value);
    }

    /**
     * Getter for <code>blog_db.sites.sitetype</code>.
     */
    public SitesSitetype getSitetype() {
        return (SitesSitetype) get(3);
    }

    /**
     * Setter for <code>blog_db.sites.groundtype</code>.
     */
    public void setGroundtype(SitesGroundtype value) {
        set(4, value);
    }

    /**
     * Getter for <code>blog_db.sites.groundtype</code>.
     */
    public SitesGroundtype getGroundtype() {
        return (SitesGroundtype) get(4);
    }

    /**
     * Setter for <code>blog_db.sites.latitude</code>.
     */
    public void setLatitude(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>blog_db.sites.latitude</code>.
     */
    public Double getLatitude() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>blog_db.sites.longitude</code>.
     */
    public void setLongitude(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>blog_db.sites.longitude</code>.
     */
    public Double getLongitude() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>blog_db.sites.elevation</code>.
     */
    public void setElevation(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>blog_db.sites.elevation</code>.
     */
    public Double getElevation() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>blog_db.sites.rating</code>.
     */
    public void setRating(SiteRating value) {
        set(8, value);
    }

    /**
     * Getter for <code>blog_db.sites.rating</code>.
     */
    public SiteRating getRating() {
        return (SiteRating) get(8);
    }

    /**
     * Setter for <code>blog_db.sites.facilities</code>.
     */
    public void setFacilities(SiteFacilities value) {
        set(9, value);
    }

    /**
     * Getter for <code>blog_db.sites.facilities</code>.
     */
    public SiteFacilities getFacilities() {
        return (SiteFacilities) get(9);
    }

    /**
     * Setter for <code>blog_db.sites.created_on</code>.
     */
    public void setCreatedOn(Timestamp value) {
        set(10, value);
    }

    /**
     * Getter for <code>blog_db.sites.created_on</code>.
     */
    public Timestamp getCreatedOn() {
        return (Timestamp) get(10);
    }

    /**
     * Setter for <code>blog_db.sites.updated_on</code>.
     */
    public void setUpdatedOn(Timestamp value) {
        set(11, value);
    }

    /**
     * Getter for <code>blog_db.sites.updated_on</code>.
     */
    public Timestamp getUpdatedOn() {
        return (Timestamp) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<Integer, String, String, SitesSitetype, SitesGroundtype, Double, Double, Double, SiteRating, SiteFacilities, Timestamp, Timestamp> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<Integer, String, String, SitesSitetype, SitesGroundtype, Double, Double, Double, SiteRating, SiteFacilities, Timestamp, Timestamp> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Sites.SITES.ID;
    }

    @Override
    public Field<String> field2() {
        return Sites.SITES.NAME;
    }

    @Override
    public Field<String> field3() {
        return Sites.SITES.DESCRIPTION;
    }

    @Override
    public Field<SitesSitetype> field4() {
        return Sites.SITES.SITETYPE;
    }

    @Override
    public Field<SitesGroundtype> field5() {
        return Sites.SITES.GROUNDTYPE;
    }

    @Override
    public Field<Double> field6() {
        return Sites.SITES.LATITUDE;
    }

    @Override
    public Field<Double> field7() {
        return Sites.SITES.LONGITUDE;
    }

    @Override
    public Field<Double> field8() {
        return Sites.SITES.ELEVATION;
    }

    @Override
    public Field<SiteRating> field9() {
        return Sites.SITES.RATING;
    }

    @Override
    public Field<SiteFacilities> field10() {
        return Sites.SITES.FACILITIES;
    }

    @Override
    public Field<Timestamp> field11() {
        return Sites.SITES.CREATED_ON;
    }

    @Override
    public Field<Timestamp> field12() {
        return Sites.SITES.UPDATED_ON;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public SitesSitetype component4() {
        return getSitetype();
    }

    @Override
    public SitesGroundtype component5() {
        return getGroundtype();
    }

    @Override
    public Double component6() {
        return getLatitude();
    }

    @Override
    public Double component7() {
        return getLongitude();
    }

    @Override
    public Double component8() {
        return getElevation();
    }

    @Override
    public SiteRating component9() {
        return getRating();
    }

    @Override
    public SiteFacilities component10() {
        return getFacilities();
    }

    @Override
    public Timestamp component11() {
        return getCreatedOn();
    }

    @Override
    public Timestamp component12() {
        return getUpdatedOn();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public SitesSitetype value4() {
        return getSitetype();
    }

    @Override
    public SitesGroundtype value5() {
        return getGroundtype();
    }

    @Override
    public Double value6() {
        return getLatitude();
    }

    @Override
    public Double value7() {
        return getLongitude();
    }

    @Override
    public Double value8() {
        return getElevation();
    }

    @Override
    public SiteRating value9() {
        return getRating();
    }

    @Override
    public SiteFacilities value10() {
        return getFacilities();
    }

    @Override
    public Timestamp value11() {
        return getCreatedOn();
    }

    @Override
    public Timestamp value12() {
        return getUpdatedOn();
    }

    @Override
    public SitesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public SitesRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public SitesRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public SitesRecord value4(SitesSitetype value) {
        setSitetype(value);
        return this;
    }

    @Override
    public SitesRecord value5(SitesGroundtype value) {
        setGroundtype(value);
        return this;
    }

    @Override
    public SitesRecord value6(Double value) {
        setLatitude(value);
        return this;
    }

    @Override
    public SitesRecord value7(Double value) {
        setLongitude(value);
        return this;
    }

    @Override
    public SitesRecord value8(Double value) {
        setElevation(value);
        return this;
    }

    @Override
    public SitesRecord value9(SiteRating value) {
        setRating(value);
        return this;
    }

    @Override
    public SitesRecord value10(SiteFacilities value) {
        setFacilities(value);
        return this;
    }

    @Override
    public SitesRecord value11(Timestamp value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public SitesRecord value12(Timestamp value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    public SitesRecord values(Integer value1, String value2, String value3, SitesSitetype value4, SitesGroundtype value5, Double value6, Double value7, Double value8, SiteRating value9, SiteFacilities value10, Timestamp value11, Timestamp value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SitesRecord
     */
    public SitesRecord() {
        super(Sites.SITES);
    }

    /**
     * Create a detached, initialised SitesRecord
     */
    public SitesRecord(Integer id, String name, String description, SitesSitetype sitetype, SitesGroundtype groundtype, Double latitude, Double longitude, Double elevation, SiteRating rating, SiteFacilities facilities, Timestamp createdOn, Timestamp updatedOn) {
        super(Sites.SITES);

        setId(id);
        setName(name);
        setDescription(description);
        setSitetype(sitetype);
        setGroundtype(groundtype);
        setLatitude(latitude);
        setLongitude(longitude);
        setElevation(elevation);
        setRating(rating);
        setFacilities(facilities);
        setCreatedOn(createdOn);
        setUpdatedOn(updatedOn);
    }

    /**
     * Create a detached, initialised SitesRecord
     */
    public SitesRecord(blog.raubach.database.codegen.tables.pojos.Sites value) {
        super(Sites.SITES);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setDescription(value.getDescription());
            setSitetype(value.getSitetype());
            setGroundtype(value.getGroundtype());
            setLatitude(value.getLatitude());
            setLongitude(value.getLongitude());
            setElevation(value.getElevation());
            setRating(value.getRating());
            setFacilities(value.getFacilities());
            setCreatedOn(value.getCreatedOn());
            setUpdatedOn(value.getUpdatedOn());
        }
    }
    // @formatter:on
}
