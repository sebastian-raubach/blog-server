/*
 * This file is generated by jOOQ.
 */
package blog.raubach.database.codegen.tables;


import blog.raubach.database.codegen.BlogDb;
import blog.raubach.database.codegen.tables.records.StorypostsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.TableImpl;


// @formatter:off
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Storyposts extends TableImpl<StorypostsRecord> {

    private static final long serialVersionUID = -1959870795;

    /**
     * The reference instance of <code>blog_db.storyposts</code>
     */
    public static final Storyposts STORYPOSTS = new Storyposts();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StorypostsRecord> getRecordType() {
        return StorypostsRecord.class;
    }

    /**
     * The column <code>blog_db.storyposts.story_id</code>.
     */
    public final TableField<StorypostsRecord, Integer> STORY_ID = createField("story_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>blog_db.storyposts.post_id</code>.
     */
    public final TableField<StorypostsRecord, Integer> POST_ID = createField("post_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>blog_db.storyposts</code> table reference
     */
    public Storyposts() {
        this(DSL.name("storyposts"), null);
    }

    /**
     * Create an aliased <code>blog_db.storyposts</code> table reference
     */
    public Storyposts(String alias) {
        this(DSL.name(alias), STORYPOSTS);
    }

    /**
     * Create an aliased <code>blog_db.storyposts</code> table reference
     */
    public Storyposts(Name alias) {
        this(alias, STORYPOSTS);
    }

    private Storyposts(Name alias, Table<StorypostsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Storyposts(Name alias, Table<StorypostsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BlogDb.BLOG_DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StorypostsRecord> getPrimaryKey() {
        return Internal.createUniqueKey(blog.raubach.database.codegen.tables.Storyposts.STORYPOSTS, "KEY_storyposts_PRIMARY", blog.raubach.database.codegen.tables.Storyposts.STORYPOSTS.STORY_ID, blog.raubach.database.codegen.tables.Storyposts.STORYPOSTS.POST_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StorypostsRecord>> getKeys() {
        return Arrays.<UniqueKey<StorypostsRecord>>asList(
              Internal.createUniqueKey(blog.raubach.database.codegen.tables.Storyposts.STORYPOSTS, "KEY_storyposts_PRIMARY", blog.raubach.database.codegen.tables.Storyposts.STORYPOSTS.STORY_ID, blog.raubach.database.codegen.tables.Storyposts.STORYPOSTS.POST_ID)
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Storyposts as(String alias) {
        return new Storyposts(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Storyposts as(Name alias) {
        return new Storyposts(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Storyposts rename(String name) {
        return new Storyposts(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Storyposts rename(Name name) {
        return new Storyposts(name, null);
    }
// @formatter:on
}
