/*
 * This file is generated by jOOQ.
 */
package blog.raubach.database.codegen.tables;


import blog.raubach.database.codegen.BlogDb;
import blog.raubach.database.codegen.tables.records.HikestatsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.TableImpl;


// @formatter:off
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Hikestats extends TableImpl<HikestatsRecord> {

    private static final long serialVersionUID = 872235473;

    /**
     * The reference instance of <code>blog_db.hikestats</code>
     */
    public static final Hikestats HIKESTATS = new Hikestats();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HikestatsRecord> getRecordType() {
        return HikestatsRecord.class;
    }

    /**
     * The column <code>blog_db.hikestats.post_id</code>.
     */
    public final TableField<HikestatsRecord, Integer> POST_ID = createField("post_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>blog_db.hikestats.duration</code>.
     */
    public final TableField<HikestatsRecord, Integer> DURATION = createField("duration", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>blog_db.hikestats.distance</code>.
     */
    public final TableField<HikestatsRecord, Double> DISTANCE = createField("distance", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>blog_db.hikestats.ascent</code>.
     */
    public final TableField<HikestatsRecord, Double> ASCENT = createField("ascent", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>blog_db.hikestats.gpx_path</code>.
     */
    public final TableField<HikestatsRecord, String> GPX_PATH = createField("gpx_path", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>blog_db.hikestats.elevation_profile_path</code>.
     */
    public final TableField<HikestatsRecord, String> ELEVATION_PROFILE_PATH = createField("elevation_profile_path", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>blog_db.hikestats.time_distance_profile_path</code>.
     */
    public final TableField<HikestatsRecord, String> TIME_DISTANCE_PROFILE_PATH = createField("time_distance_profile_path", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>blog_db.hikestats.created_on</code>.
     */
    public final TableField<HikestatsRecord, Timestamp> CREATED_ON = createField("created_on", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>blog_db.hikestats.updated_on</code>.
     */
    public final TableField<HikestatsRecord, Timestamp> UPDATED_ON = createField("updated_on", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>blog_db.hikestats</code> table reference
     */
    public Hikestats() {
        this(DSL.name("hikestats"), null);
    }

    /**
     * Create an aliased <code>blog_db.hikestats</code> table reference
     */
    public Hikestats(String alias) {
        this(DSL.name(alias), HIKESTATS);
    }

    /**
     * Create an aliased <code>blog_db.hikestats</code> table reference
     */
    public Hikestats(Name alias) {
        this(alias, HIKESTATS);
    }

    private Hikestats(Name alias, Table<HikestatsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Hikestats(Name alias, Table<HikestatsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BlogDb.BLOG_DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HikestatsRecord> getPrimaryKey() {
        return Internal.createUniqueKey(blog.raubach.database.codegen.tables.Hikestats.HIKESTATS, "KEY_hikestats_PRIMARY", blog.raubach.database.codegen.tables.Hikestats.HIKESTATS.POST_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HikestatsRecord>> getKeys() {
        return Arrays.<UniqueKey<HikestatsRecord>>asList(
              Internal.createUniqueKey(blog.raubach.database.codegen.tables.Hikestats.HIKESTATS, "KEY_hikestats_PRIMARY", blog.raubach.database.codegen.tables.Hikestats.HIKESTATS.POST_ID)
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Hikestats as(String alias) {
        return new Hikestats(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Hikestats as(Name alias) {
        return new Hikestats(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Hikestats rename(String name) {
        return new Hikestats(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Hikestats rename(Name name) {
        return new Hikestats(name, null);
    }
// @formatter:on
}
