/*
 * This file is generated by jOOQ.
 */
package blog.raubach.database.codegen.tables.records;


import blog.raubach.database.codegen.tables.Postusers;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


// @formatter:off
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PostusersRecord extends UpdatableRecordImpl<PostusersRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = -1674552998;

    /**
     * Setter for <code>blog_db.postusers.post_id</code>.
     */
    public void setPostId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>blog_db.postusers.post_id</code>.
     */
    public Integer getPostId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>blog_db.postusers.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>blog_db.postusers.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Postusers.POSTUSERS.POST_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Postusers.POSTUSERS.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getPostId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getPostId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostusersRecord value1(Integer value) {
        setPostId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostusersRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostusersRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PostusersRecord
     */
    public PostusersRecord() {
        super(Postusers.POSTUSERS);
    }

    /**
     * Create a detached, initialised PostusersRecord
     */
    public PostusersRecord(Integer postId, Integer userId) {
        super(Postusers.POSTUSERS);

        set(0, postId);
        set(1, userId);
    }
// @formatter:on
}
